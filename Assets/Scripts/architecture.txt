Архитектурные принципы для нового шаблона
1. Root — глобальный контекст
Root создаётся один раз при запуске приложения и помещается в DontDestroyOnLoad.
Доступ к Root осуществляется только через явную передачу ссылки (например, через DI, конструкторы, параметры Init и т.д.), а не через статические поля или singleton-паттерн.
Root агрегирует только действительно глобальные сервисы, которые должны жить между сценами:
Sound
Pool
SdkAdapter
Library
(другие сервисы, не зависящие от сцены)
Root содержит ссылку на один активный Boot (контекст сцены).
При смене сцены Boot уничтожается, а новый Boot создаётся и регистрируется в Root как активный.
Нет отдельных ссылок на Boot меню, Boot комнаты и т.д. — только один активный Boot.
Root не содержит ссылок на фабрики комнат, игроков и прочее, что имеет смысл только в рамках сцены или сетевого контекста.
2. Boot — контекст сцены
Boot создаётся при загрузке каждой сцены и уничтожается при её выгрузке.
Boot получает ссылку на Root при инициализации (через Init).
Boot агрегирует все зависимости, специфичные для сцены:
UI, Session, PlayersFactory, Statistics, Economy, Level, MenuNet и т.д.
Boot регистрируется в Root как активный Boot на время жизни сцены.
Boot не singleton, не static, не глобальный — только через Root или явную передачу.
Важно разделить Boot для разных типов сцен (например, BootMenu, BootGame, BootServer), чтобы не было "франкенштейна", совмещающего обязанности меню, игровой комнаты и серверной логики.
Каждый Boot отвечает только за свой тип сцены и свои зависимости.
3. Инициализация и передача зависимостей
Все зависимости инициализируются вручную через методы Init, с явной передачей контекста (Root или Boot).
Не использовать статические поля, singleton-паттерны и глобальные точки доступа.
Для доступа к глобальным сервисам сцена всегда использует ссылку на Root, полученную через Boot.
4. Жизненный цикл
Root создаётся один раз и живёт всегда (DontDestroyOnLoad).
Boot создаётся при загрузке сцены, получает ссылку на Root, регистрируется в Root как активный Boot.
При выгрузке сцены Boot уничтожается, Root сбрасывает ссылку на Boot.
Все сценовые зависимости живут только в Boot и уничтожаются вместе с ним.

Кратко
Root — глобальный, не singleton, не static, только через явную ссылку, живёт всегда, содержит только глобальные сервисы и ссылку на активный Boot.
Boot — сценовый, не singleton, не static, создаётся/уничтожается вместе со сценой, агрегирует только сценовые зависимости, получает Root через Init.
Нет статиков, singleton-ов, глобальных точек доступа.
Явная передача зависимостей на всех уровнях.