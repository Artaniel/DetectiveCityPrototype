Game Design Concept: Detective City (название временное)
________________

1. Обзор игры
1.1. Концепция
Экспериментальная платформа прототипирования, предназначенная для исследования глубины и разнообразия 
процедурно-генерируемого контента. Основная задача — понять, как различные игровые системы и ИИ-решения могут создавать 
неисчерпаемо интересные для исследования ситуации, в которых игроку всегда есть что открывать и анализировать. Проект нацелен
на поиск таких сочетаний механик, при которых каждая новая черта или действие становится отправной точкой для новых сценариев, 
а не просто повторяющейся рутиной. В центре внимания — создание "бесконечного лабиринта" ситуаций для исследования появляющихся 
через комбинаторику конечного числа игровых механик.
1.2. Жанр
Симулятор жизни / Детектив / Прототип-песочница.
1.3. Платформа
PC (Unity, Editor-first).
1.4. Целевая аудитория
Геймдизайнеры, разработчики, энтузиасты симуляторов и детективных игр, 14+.
1.5. Перспектива
Схематичная визуализация для быстрой отладки.
________________

2. Ключевые особенности и геймплей
2.1. Кор-геймплей
- NPC живут по расписанию, удовлетворяют потребности, совершают действия (работа, еда, отдых, преступления).
- В мире возникают события (например, кражи), которые игрок может расследовать.
- Игрок может наблюдать за NPC, собирать улики, перемещаться между локациями, выдвигать обвинения.
- Все системы легко расширяются и заменяются для тестирования новых идей.
2.2. Ключевые механики
- Utility AI: NPC принимают решения на основе потребностей и расписания.
- Симуляция времени: игровой день разбит на "тики", все процессы синхронизированы.
- Система локаций: мир как граф связанных помещений.
- Система событий: кражи, перемещения, работа, еда и др.
- Система расследования: игрок видит события, может анализировать подозреваемых, проверять алиби.
________________

3. Сущности и данные
3.1. NPC
- Имя, дом, работа, черты характера, текущее состояние, инвентарь.
- Поведение определяется потребностями, расписанием и чертами.
3.2. Локации
- Тип, связи с другими локациями, инвентарь предметов.
3.3. Игрок
- Может перемещаться, наблюдать, собирать информацию, обвинять NPC.
3.4. События
- Кражи, перемещения, работа, еда, расследования.
________________

4. Особенности прототипирования
- Любая система может быть быстро заменена или расширена.
- Логирование и визуализация для быстрой отладки.
- Минимум графики, максимум прозрачности симуляции.
- Особое внимание уделяется анализу того, как новые механики и их сочетания влияют на глубину и разнообразие возникающих сценариев.
________________

5. Планирование

5.1. Базовый скелет (MVP для прототипирования)
    5.1.1. Мир и локации
    5.1.2. NPC
    5.1.3. Потребности NPC
    5.1.4. Utility AI и перемещения
    5.1.5. Расписание NPC
    5.1.6. Черты характера NPC
    5.1.7. Работа, воровство
    5.1.8. Инвентарь локаций и NPC
    5.1.9. Кражи, преступление, след, улика
    5.1.10. Команды игрока: перемещение, просмотр NPC, обвинения
    5.1.11. Система знаний NPC
    5.1.12. Примитивная визуализация

  5.2. Наращивание контента и механик
    5.2.1. Профессии и социальные роли (полицейский, бармен, вор, информатор и т.д.)
    5.2.2. Новые черты NPC (“параноик”, “манипулятор” и др.)
    5.2.3. Социальные связи и отношения (дружба, вражда, семья, коллеги)
    5.2.4. Слухи и распространение информации
    5.2.5. Динамические события (несчастные случаи, пожары, праздники)
    5.2.6. Система репутации (NPC и игрока)
    5.2.7. Скрытые мотивы и секреты NPC
    5.2.8. Экономика и ресурсы (деньги, обмен, кражи ценностей)
    5.2.9. Внешние силы (приезжие, инспекторы, полиция, СМИ)
    5.2.10. Модификаторы мира (погода, время года, катастрофы)
    5.2.11. Новые типы преступлений и расследований (шантаж, исчезновения, поджоги)
    5.2.12. Вмешательство игрока (подбрасывание улик, провокации, ложные следы)
    5.2.13. Мультиагентные сценарии (несколько детективов, конкуренция, кооперация)

  5.3. Эксперименты с системами и анализ
    5.3.1. Связывание механик: сложные зависимости между системами (например, экономика ↔ мотивация преступлений)
    5.3.2. Многошаговые сценарии: цепочки событий, последствия через несколько игровых слоёв
    5.3.3. Динамические альянсы и конфликты между NPC
    5.3.4. Эволюция поведения NPC на основе опыта и событий
    5.3.5. Влияние внешних факторов на все системы (кризисы, законы, катастрофы)
    5.3.6. Поиск и устранение “узких мест” симуляции, отслеживание нелогичного поведения и предсказуемости систем 
    5.3.7. Генерация и тестирование гипотез о новых механиках

  5.4. UX и инструменты
    5.4.1. Улучшение интерфейса для наблюдения и управления симуляцией
    5.4.2. Инструменты визуализации связей и событий (графы, таймлайны)
    5.4.3. Автоматический сбор и анализ статистики сценариев
    5.4.4. Инструменты для настройки, моддинга, интеграции новых данных (NPC, локации, правила)
    5.4.5. "Сценарный" запуск: возможность быстро запускать симуляцию с заданными условиями для тестирования гипотез
    5.4.6. Система логирования и журналирования событий
    5.4.7. Инструменты для сравнения и воспроизведения интересных сценариев

5.5. Тестирование и фидбек
    5.5.1. Тестирование с геймдизайнерами: анализ глубины и разнообразия возникающих сценариев
    5.5.2. Тестирование с энтузиастами симуляторов: проверка интереса к долгосрочному исследованию мира
    5.5.3. Анализ фидбека.
    5.5.4. Итерация на основе результатов.
    5.5.5. Документирование успешных и неудачных экспериментов для будущих итераций.
________________
